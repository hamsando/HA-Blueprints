blueprint:
  name: Basic Presence to Occupancy
  description: Combine single source presence to occupancy v5
  domain: automation
  input:
    occupancy_sensor:
      name: Occupancy Sensor (Trigger)
      description: This sensor detects if somebody is in the room
      selector:
        entity:
          filter:
            - domain: binary_sensor
    main_light:
      name: Light Switch (Trigger)
      description: Turning off this light switch manually, will cause the room to be considered clear
      selector:
        entity:
          filter:
            - domain: light
    off_smoothing_delay: 
      name: Delay
      description: How long to delay sending off
      default: 00:03:30
      selector:
        duration:
    input_boolean_helper:
      name: Helper
      description: Helper input_boolean which is then connected to the template binary_sensor
      selector:
        entity:
          filter:
            - domain: input_boolean
    mqtt_path:
      name: MQTT Path
      description: For example - home/virtual/hoarding_occupancy/state
      selector:
        text:
triggers:
  - trigger: state
    entity_id: !input main_light
    from: "on"
    to: "off"
    id: LightOffManually
  - trigger: state
    entity_id: !input occupancy_sensor
    from: null
    to: null
actions:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: template
          value_template: "{{trigger.to_state.context.user_id == none}}"
        - condition: template
          value_template: "{{trigger.to_state.context.parent_id == none}}"
        - condition: trigger
          id:
          - LightOffManually
      sequence:
        - action: input_boolean.turn_off
          target:
            entity_id: !input input_boolean_helper
        - action: mqtt.publish
          data:
            qos: "2"
            retain: true
            topic: !input mqtt_path
            payload: "false"
    - conditions:
      - condition: state
        entity_id: !input occupancy_sensor
        state: "on"
      sequence:
        - action: input_boolean.turn_on
          target:
            entity_id: !input input_boolean_helper      
        - action: mqtt.publish
          data:
            qos: "2"
            retain: true
            topic: !input mqtt_path
            payload: "true"
    - conditions:
      - condition: state
        entity_id: !input occupancy_sensor
        state: "off"
      sequence:
        - delay:
            !input off_smoothing_delay
        - action: input_boolean.turn_off
          target:
            entity_id: !input input_boolean_helper
        - action: mqtt.publish
          data:
            qos: "2"
            retain: true
            topic: !input mqtt_path
            payload: "false"
mode: restart
